//Code is generated by ucloud code generator, don't modify it by hand, it will cause undefined behaviors.
//go:generate ucloud-gen-go-api ULB ReleaseBackend

package ulb

import (
	"github.com/yangyimincn/ucloud-sdk-go/ucloud/request"
	"github.com/yangyimincn/ucloud-sdk-go/ucloud/response"
)

// ReleaseBackendRequest is request schema for ReleaseBackend action
type ReleaseBackendRequest struct {
	request.CommonBase

	// [公共参数] 地域。 参见 [地域和可用区列表](../summary/regionlist.html)
	// Region *string `required:"true"`

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](../summary/get_project_list.html)
	// ProjectId *string `required:"true"`

	// 负载均衡实例的ID
	ULBId *string `required:"true"`

	// 后端资源实例的ID(ULB后端ID，非资源自身ID)
	BackendId *string `required:"true"`
}

// ReleaseBackendResponse is response schema for ReleaseBackend action
type ReleaseBackendResponse struct {
	response.CommonBase
}

// NewReleaseBackendRequest will create request of ReleaseBackend action.
func (c *ULBClient) NewReleaseBackendRequest() *ReleaseBackendRequest {
	req := &ReleaseBackendRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

// ReleaseBackend - 从VServer释放后端资源实例
func (c *ULBClient) ReleaseBackend(req *ReleaseBackendRequest) (*ReleaseBackendResponse, error) {
	var err error
	var res ReleaseBackendResponse

	err = c.Client.InvokeAction("ReleaseBackend", req, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}
