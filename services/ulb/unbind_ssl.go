//Code is generated by ucloud code generator, don't modify it by hand, it will cause undefined behaviors.
//go:generate ucloud-gen-go-api ULB UnbindSSL

package ulb

import (
	"github.com/yangyimincn/ucloud-sdk-go/ucloud/request"
	"github.com/yangyimincn/ucloud-sdk-go/ucloud/response"
)

// UnbindSSLRequest is request schema for UnbindSSL action
type UnbindSSLRequest struct {
	request.CommonBase

	// [公共参数] 地域。 参见 [地域和可用区列表](../summary/regionlist.html)
	// Region *string `required:"true"`

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](../summary/get_project_list.html)
	// ProjectId *string `required:"true"`

	// 所绑定ULB实例ID
	ULBId *string `required:"true"`

	// 所绑定VServer实例ID
	VServerId *string `required:"true"`

	// SSL证书的Id
	SSLId *string `required:"true"`
}

// UnbindSSLResponse is response schema for UnbindSSL action
type UnbindSSLResponse struct {
	response.CommonBase
}

// NewUnbindSSLRequest will create request of UnbindSSL action.
func (c *ULBClient) NewUnbindSSLRequest() *UnbindSSLRequest {
	req := &UnbindSSLRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

// UnbindSSL - 从VServer解绑SSL证书
func (c *ULBClient) UnbindSSL(req *UnbindSSLRequest) (*UnbindSSLResponse, error) {
	var err error
	var res UnbindSSLResponse

	err = c.Client.InvokeAction("UnbindSSL", req, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}
