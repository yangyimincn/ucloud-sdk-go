// Code is generated by ucloud-model, DO NOT EDIT IT.

package ipsecvpn

import (
	"github.com/yangyimincn/ucloud-sdk-go/ucloud/request"
	"github.com/yangyimincn/ucloud-sdk-go/ucloud/response"
)

// DeleteVPNTunnelRequest is request schema for DeleteVPNTunnel action
type DeleteVPNTunnelRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](../summary/get_project_list.html)
	// ProjectId *string `required:"true"`

	// [公共参数] 地域。 参见 [地域和可用区列表](../summary/regionlist.html)
	// Region *string `required:"true"`

	// VPN隧道的资源ID
	VPNTunnelId *string `required:"true"`
}

// DeleteVPNTunnelResponse is response schema for DeleteVPNTunnel action
type DeleteVPNTunnelResponse struct {
	response.CommonBase
}

// NewDeleteVPNTunnelRequest will create request of DeleteVPNTunnel action.
func (c *IPSecVPNClient) NewDeleteVPNTunnelRequest() *DeleteVPNTunnelRequest {
	req := &DeleteVPNTunnelRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

// DeleteVPNTunnel - 删除VPN隧道
func (c *IPSecVPNClient) DeleteVPNTunnel(req *DeleteVPNTunnelRequest) (*DeleteVPNTunnelResponse, error) {
	var err error
	var res DeleteVPNTunnelResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DeleteVPNTunnel", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}
