//Code is generated by ucloud code generator, don't modify it by hand, it will cause undefined behaviors.
//go:generate ucloud-gen-go-api UDisk ResizeUDisk

package udisk

import (
	"github.com/yangyimincn/ucloud-sdk-go/ucloud/request"
	"github.com/yangyimincn/ucloud-sdk-go/ucloud/response"
)

// ResizeUDiskRequest is request schema for ResizeUDisk action
type ResizeUDiskRequest struct {
	request.CommonBase

	// [公共参数] 地域。 参见 [地域和可用区列表](../summary/regionlist.html)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](../summary/regionlist.html)
	// Zone *string `required:"true"`

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](../summary/get_project_list.html)
	// ProjectId *string `required:"false"`

	// UDisk Id
	UDiskId *string `required:"true"`

	// 调整后大小, 单位:GB, 范围[1~2000],权限位控制可达8000,若需要请申请开通相关权限。
	Size *int `required:"true"`

	// 使用的代金券id
	CouponId *string `required:"false"`
}

// ResizeUDiskResponse is response schema for ResizeUDisk action
type ResizeUDiskResponse struct {
	response.CommonBase
}

// NewResizeUDiskRequest will create request of ResizeUDisk action.
func (c *UDiskClient) NewResizeUDiskRequest() *ResizeUDiskRequest {
	req := &ResizeUDiskRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

// ResizeUDisk - 调整UDisk容量
func (c *UDiskClient) ResizeUDisk(req *ResizeUDiskRequest) (*ResizeUDiskResponse, error) {
	var err error
	var res ResizeUDiskResponse

	err = c.Client.InvokeAction("ResizeUDisk", req, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}
