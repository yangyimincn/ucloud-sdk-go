//Code is generated by ucloud code generator, don't modify it by hand, it will cause undefined behaviors.
//go:generate ucloud-gen-go-api UDisk AttachUDisk

package udisk

import (
	"github.com/yangyimincn/ucloud-sdk-go/ucloud/request"
	"github.com/yangyimincn/ucloud-sdk-go/ucloud/response"
)

// AttachUDiskRequest is request schema for AttachUDisk action
type AttachUDiskRequest struct {
	request.CommonBase

	// [公共参数] 地域。 参见 [地域和可用区列表](../summary/regionlist.html)
	// Region *string `required:"true"`

	// [公共参数] 可用区。参见 [可用区列表](../summary/regionlist.html)
	// Zone *string `required:"true"`

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](../summary/get_project_list.html)
	// ProjectId *string `required:"false"`

	// UHost实例ID
	UHostId *string `required:"true"`

	// 需要挂载的UDisk实例ID.
	UDiskId *string `required:"true"`

	// 是否允许多点挂载（Yes: 允许多点挂载， No: 不允许多点挂载， 不填默认Yes ）
	MultiAttach *string `required:"false"`
}

// AttachUDiskResponse is response schema for AttachUDisk action
type AttachUDiskResponse struct {
	response.CommonBase

	// 挂载的UHost实例ID
	UHostId string

	// 挂载的UDisk实例ID
	UDiskId string
}

// NewAttachUDiskRequest will create request of AttachUDisk action.
func (c *UDiskClient) NewAttachUDiskRequest() *AttachUDiskRequest {
	req := &AttachUDiskRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

// AttachUDisk - 将一个可用的UDisk挂载到某台主机上，当UDisk挂载成功后，还需要在主机内部进行文件系统操作
func (c *UDiskClient) AttachUDisk(req *AttachUDiskRequest) (*AttachUDiskResponse, error) {
	var err error
	var res AttachUDiskResponse

	err = c.Client.InvokeAction("AttachUDisk", req, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}
