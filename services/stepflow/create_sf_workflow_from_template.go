// Code is generated by ucloud-model, DO NOT EDIT IT.

package stepflow

import (
	"github.com/yangyimincn/ucloud-sdk-go/ucloud/request"
	"github.com/yangyimincn/ucloud-sdk-go/ucloud/response"
)

// CreateSFWorkflowFromTemplateRequest is request schema for CreateSFWorkflowFromTemplate action
type CreateSFWorkflowFromTemplateRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](../summary/get_project_list.html)
	// ProjectId string

	// [公共参数] 地域。 参见 [地域和可用区列表](../summary/regionlist.html)
	// Region string

	// 需要创建的工作流namespace
	Namespace *string

	// 描述工作流定义的base64字符串
	Workflow *string

	// 需要创建的工作流名称
	WorkflowName *string
}

// CreateSFWorkflowFromTemplateResponse is request schema for CreateSFWorkflowFromTemplate action
type CreateSFWorkflowFromTemplateResponse struct {
	response.CommonBase

	// 返回消息
	Message string

	// 创建的工作流版本号
	Version int
}

// NewCreateSFWorkflowFromTemplateRequest will create request of CreateSFWorkflowFromTemplate action.
func (c *StepFlowClient) NewCreateSFWorkflowFromTemplateRequest() *CreateSFWorkflowFromTemplateRequest {
	req := &CreateSFWorkflowFromTemplateRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}

// CreateSFWorkflowFromTemplate - 导入工作流定义
func (c *StepFlowClient) CreateSFWorkflowFromTemplate(req *CreateSFWorkflowFromTemplateRequest) (*CreateSFWorkflowFromTemplateResponse, error) {
	var err error
	var res CreateSFWorkflowFromTemplateResponse

	reqCopier := *req

	reqCopier.Workflow = request.ToBase64Query(reqCopier.Workflow)

	err = c.Client.InvokeAction("CreateSFWorkflowFromTemplate", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}
